{
  "statements": [
    {
      "statement": "CREATE CONSTRAINT ON (n:Resource) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE INDEX ON :Resource(ownedBy)"
    },
    {
      "statement": "CREATE INDEX ON :Resource(resourceType)"
    },
    {
      "statement": "CREATE INDEX ON :Resource(nodeSortOrder)"
    },
    {
      "statement": "CREATE INDEX ON :Resource(schema_name)"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:Folder) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE INDEX ON :Folder(ownedBy)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(resourceType)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(nodeSortOrder)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(schema_name)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(createdOnTS)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(lastUpdatedOnTS)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(isRoot)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(isSystem)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(isUserHome)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(homeOf)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(everybodyPermission)"
    },
    {
      "statement": "CREATE INDEX ON :Folder(specialFolder)"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:Group) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE INDEX ON :Group(schema_name)"
    },
    {
      "statement": "CREATE INDEX ON :Group(specialGroup)"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:User) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE INDEX ON :User(schema_name)"
    },
    {
      "statement": "CREATE INDEX ON :User(apiKeys)"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:Artifact) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(ownedBy)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(resourceType)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(nodeSortOrder)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(schema_name)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(createdOnTS)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(lastUpdatedOnTS)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(schema_isBasedOn)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(pav_derivedFrom)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(pav_version)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(bibo_status)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(isLatestVersion)"
    },
    {
      "statement": "CREATE INDEX ON :Artifact(everybodyPermission)"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:Category) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE INDEX ON :Category(schema_name)"
    },
    {
      "statement": "CREATE INDEX ON :Category(parentCategoryId)"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:FileSystemResource) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE INDEX ON :FileSystemResource(schema_name)"
    },
    {
      "statement": "CREATE INDEX ON :FileSystemResource(nodeSortOrder)"
    },
    {
      "statement": "CREATE INDEX ON :FileSystemResource(resourceType)"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:Field) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:Element) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:Template) ASSERT n._id IS UNIQUE"
    },
    {
      "statement": "CREATE CONSTRAINT ON (n:Instance) ASSERT n._id IS UNIQUE"
    }
  ]
}
